# Security
security:
  firewalls:
    # passport-basic  DEMO SECURITY AREA
    basic_area:
        pattern:               ^/basic
        provider:              nodefony
        form_login:
          default_target_path: /finder
        passport-basic:
          realm:               "nodefony"
        logout:                /logout
        context:               ~

    # passport-digest  DEMO SECURITY AREA
    digest_area:
        pattern:               ^/digest
        provider:              nodefony
        form_login:
          default_target_path: /finder
        passport-digest:
          realm:               "nodefony"
        logout:                /logout
        context:               ~

    # passport-local  DEMO SECURITY AREA
    local_area:
        pattern:               ^/local
        provider:              nodefony
        form_login:
          login_path:          /demo/login/passport-local
          default_target_path: /home
          always_use_default_target_path : true
        passport-local:
          usernameField:       'username'
          passwordField:       'passwd'
        logout:                /logout
        context:               ~
        redirectHttps:         true

    # passport-local  DEMO SECURITY AREA
    #google_area:
    #    pattern:              ^/auth/google
    #    provider:             nodefony
    #    form_login:
    #      default_target_path: /
    #      check_path:         /auth/google
    #    passport-google-oauth20:
    #      clientID:           "clientID"
    #      clientSecret:       "clientSecret"
    #      callbackURL:        "https://nodefony.com/auth/google/callback"
    #      scopes:             ["profile","email"]
    #    logout:               /logout
    #    context:              google
    #    redirectHttps:        true
    #    crossDomain:
    #        allow-origin:
    #          google:         accounts.google.com
    #        Access-Control:
    #          Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS"
    #          Access-Control-Allow-Headers: "ETag, Authorization,  X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date"
    #          Access-Control-Allow-Credentials: true
    #          Access-Control-Expose-Headers: "WWW-Authenticate ,X-Json"
    #          Access-Control-Max-Age: 10


    # passport-github2  DEMO SECURITY AREA
    #  Management credentials : https://console.developers.google.com/apis
    #github_area:
    #    pattern:              ^/auth/github
    #    provider:             nodefony
    #    form_login:
    #      default_target_path: /
    #      check_path:         /auth/github
    #    passport-github2:
    #      clientID:           "clientID"
    #      clientSecret:       "clientSecret"
    #      callbackURL:        "https://nodefony.com/auth/github/callback"
    #      scopes:             [ "user:email" ]
    #    logout:               /logout
    #    context:              github
    #    redirectHttps:        true
    #    crossDomain:
    #        allow-origin:
    #          github:         github.com
    #        Access-Control:
    #          Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS"
    #          Access-Control-Allow-Headers: "ETag, Authorization,  X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date"
    #          Access-Control-Allow-Credentials: true
    #          Access-Control-Expose-Headers: "WWW-Authenticate ,X-Json"
    #          Access-Control-Max-Age: 10


    # passport-ldapauth  LDAP DEMO SECURITY AREA
    #   CHECK ./node_modules/.bin/ldapjs-search   -u ldap://ldap-server.com -b "dc=object,dc=com" "uid=user"
    #
    #ldap_area:
    #         pattern:         ^/
    #         provider:        nodefony
    #         form_login:
    #           login_path:    /login/ldap
    #           default_target_path: /demo
    #         passport-ldapauth:
    #           server:
    #             url:         'ldap://ldad-server.com'
    #             searchBase:  'dc=nodefony,dc=com'
    #             searchFilter: '(uid={{username}})'
    #           usernameField: 'email'
    #           passwordField: 'passwd'
    #           profile_wrapper:
    #             username:    "profile.uid"
    #             name:        "profile.sn"
    #             surname:     "profile.givenName"
    #             email:       "profile.mail"
    #             displayName: "profile.cn"
    #         logout:          /logout
    #         context:         documentation
